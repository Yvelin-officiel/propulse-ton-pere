name: Deploy release

on:
  pull_request_target:
    types: [opened]
    branches:
      - 'releases/**'

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      write-all
    steps:
      - name: Vérifier la branche source
        id: check_branch
        run: |
          if [[ "${{ github.head_ref }}" == "main" || "${{ github.head_ref }}" == bug/* || "${{ github.head_ref }}" == feature/* ]]; then
            echo "ok=true" >> $GITHUB_OUTPUT
          else
            echo "ok=false" >> $GITHUB_OUTPUT
          fi
      - name: Fermer la PR si branche source invalide
        if: steps.check_branch.outputs.ok == 'false'
        uses: superbrothers/close-pull-request@v3
        with:
          comment: "La branche source doit être 'main' ou commencer par 'bug/'."
      - uses: actions/checkout@v4
      - uses: typst-community/setup-typst@v3

      - name: Installer les dépendances
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev gzip

      - name: Compiler le binaire
        run: cargo build --release

      - name: Préparer l’arborescence du paquet
        run: |
          mkdir -p package/usr/bin
          mkdir -p package/usr/share/man/man1
          mkdir -p package/etc/systemd/system
          mkdir -p package/DEBIAN

          cp target/release/simeis-server package/usr/bin/
          cp propulse-ton-pere.1 package/usr/share/man/man1/
          gzip -f package/usr/share/man/man1/propulse-ton-pere.1
          cp simeis.service package/etc/systemd/system/
          cp packaging/control package/DEBIAN/
          cp packaging/preinst package/DEBIAN/
          cp packaging/postinst package/DEBIAN/

          chmod 755 package/DEBIAN/preinst
          chmod 755 package/DEBIAN/postinst

      - name: Créer le paquet .deb
        run: dpkg-deb --build package simeis_1.0.0.deb

      - name: Uploader le paquet .deb en tant qu’artefact
        uses: actions/upload-artifact@v4
        with:
          name: simeis-deb
          path: simeis_1.0.0.deb
      - name: Build documentation
        run: make manual
      - name: Check code style
        run: make check
      - name: Format code
        run: make format
      - name: Schema validation
        run:
          make schema
      - name: Hash et message du commit dans les variables d'environnement
        run: |
          echo "GIT_HASH=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV
          echo "GIT_MESSAGE<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Générer le changelog de la branche source
        id: changelog
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          REPO_URL="https://github.com/${{ github.repository }}"
          BRANCH_URL="$REPO_URL/tree/$BRANCH_NAME"
          echo "CHANGELOG=Lien de la branche source : $BRANCH_URL" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag de la release
        id: extract_tag
        run: |
          TAG_NAME=$(echo "${{ github.base_ref }}" | sed -E 's#^releases/##')
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
      - name: Télécharger l’artefact .deb
        uses: actions/download-artifact@v4
        with:
          name: simeis-deb
      - name: Vérification que le binaire est bien présent
        run: |
          ls -l
      - name: Vérifier le binaire compilé
        run: ls -lh target/release/
      - name: Copier le binaire pour Docker
        run: cp target/release/simeis-server ./simeis-server-bin
      - name: Build Docker image
        run: |
          docker build -t simeis-server -f .github/Dockerfile .
      - name: Save Docker image to tar file
        run: |
          docker save simeis-server -o simeis-server.tar
      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: simeis-server-docker-image
          path: simeis-server.tar
      - name: Publier la release automatiquement
        uses: mini-bomba/create-github-release@v1.1.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.TAG_NAME }}
          prerelease: true
          name: "Latest Commit, that compiles"
          body: |
            This automatic prerelease is built from commit ${{ env.GIT_HASH }} and was triggered by @${{ github.actor }}
            [Github Actions workflow run that built this prerelease](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

            Message du commit :
            ${{ env.GIT_MESSAGE }}
            
            Changelog :
            ${{ env.CHANGELOG }}
          files: |
            doc/manual.pdf
            simeis_1.0.0.deb
            simeis-server.tar
          clear_attachments: true